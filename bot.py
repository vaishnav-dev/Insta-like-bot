import telebot
import requests
import random
import os
import time
from user_agent import generate_user_agent
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = os.getenv("BOT_TOKEN")  # Use environment variable for security
bot = telebot.TeleBot(TOKEN)

user_lang = {}  # Store user language preferences
user_data = {}  # Temporary storage for username & post link

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton("English üá¨üáß", callback_data="lang_en"),
        InlineKeyboardButton("Malayalam üáÆüá≥", callback_data="lang_ml")
    )
    bot.send_message(chat_id, "Choose language / ‡¥≠‡¥æ‡¥∑ ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("lang_"))
def set_language(call):
    chat_id = call.message.chat.id
    lang = call.data.split("_")[1]
    user_lang[chat_id] = lang

    welcome_msg = (
        "üéâ Welcome to **Instagram Like Booster Bot!**\n\n"
        "‚úÖ **Increase likes on your Instagram post for free!**\n"
        "üëâ **If you need help, contact @yshzap.**"
        if lang == "en" else
        "üéâ **‡¥á‡µª‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥ó‡µç‡¥∞‡¥æ‡¥Ç ‡¥≤‡µà‡¥ï‡µç‡¥ï‡µç ‡¥¨‡µÇ‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥¨‡µã‡¥ü‡µç‡¥ü‡¥ø‡¥≤‡µá‡¥ï‡µç‡¥ï‡µç ‡¥∏‡µç‡¥µ‡¥æ‡¥ó‡¥§‡¥Ç!**\n\n"
        "‚úÖ **‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ Instagram ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥≤‡µà‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡µæ ‡¥µ‡µº‡¥¶‡µç‡¥ß‡¥ø‡¥™‡µç‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï!**\n"
        "üëâ **‡¥∏‡¥π‡¥æ‡¥Ø‡¥Ç ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥Æ‡¥æ‡¥£‡µã? @yshzap ‡¥é‡¥®‡µç‡¥®‡µÜ ‡¥∏‡¥Æ‡µÄ‡¥™‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï.**"
    )
    
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("Increase Post Likes üëç", callback_data="increase_likes"))
    
    bot.send_message(chat_id, welcome_msg, reply_markup=markup, parse_mode="Markdown")

@bot.callback_query_handler(func=lambda call: call.data == "increase_likes")
def ask_username(call):
    chat_id = call.message.chat.id
    lang = user_lang.get(chat_id, "en")

    msg = (
        "‚úèÔ∏è **Send your Instagram username** (without `@`).\n\n"
        "‚ö†Ô∏è **Your account must be public!**"
        if lang == "en" else
        "‚úèÔ∏è **‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥á‡µª‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥ó‡µç‡¥∞‡¥æ‡¥Ç ‡¥Ø‡µÇ‡¥∏‡µº‡¥®‡µÜ‡¥Ø‡¥ø‡¥Ç ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï** (`@` ‡¥µ‡µá‡¥£‡µç‡¥ü).\n\n"
        "‚ö†Ô∏è **‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ö‡¥ï‡µç‡¥ï‡µó‡¥£‡µç‡¥ü‡µç ‡¥™‡¥¨‡µç‡¥≤‡¥ø‡¥ï‡µç ‡¥Ü‡¥ï‡¥£‡¥Ç!**"
    )
    
    user_data[chat_id] = {}  # Reset user data
    bot.send_message(chat_id, msg, parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.chat.id in user_data and "username" not in user_data[message.chat.id])
def save_username(message):
    chat_id = message.chat.id
    lang = user_lang.get(chat_id, "en")

    username = message.text.strip()
    
    if "@" in username or " " in username:
        error_msg = (
            "‚ùå **Invalid username!** Send only your username, without `@` or spaces."
            if lang == "en" else
            "‚ùå **‡¥Ö‡¥∏‡¥æ‡¥ß‡µÅ‡¥µ‡¥æ‡¥Ø ‡¥Ø‡µÇ‡¥∏‡µº‡¥®‡µÜ‡¥Ø‡¥ø‡¥Ç!** `@` ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥∏‡µç‡¥™‡µÜ‡¥Ø‡µç‡¥∏‡µç ‡¥á‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µÜ ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥Ø‡µÇ‡¥∏‡µº‡¥®‡µÜ‡¥Ø‡¥ø‡¥Ç ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï."
        )
        bot.send_message(chat_id, error_msg, parse_mode="Markdown")
        return

    user_data[chat_id]["username"] = username  # Save username

    msg = (
        "üì∏ **Now send your Instagram post link.**"
        if lang == "en" else
        "üì∏ **‡¥á‡¥™‡µç‡¥™‡µã‡µæ ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ Instagram ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï.**"
    )
    bot.send_message(chat_id, msg, parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.chat.id in user_data and "post" not in user_data[message.chat.id])
def save_post_link(message):
    chat_id = message.chat.id
    lang = user_lang.get(chat_id, "en")

    post_link = message.text.strip()
    
    if "instagram.com/p/" not in post_link:
        error_msg = (
            "‚ùå **Invalid post link!** Send a correct Instagram post link."
            if lang == "en" else
            "‚ùå **‡¥Ö‡¥∏‡¥æ‡¥ß‡µÅ‡¥µ‡¥æ‡¥Ø ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç!** ‡¥∂‡¥∞‡¥ø‡¥Ø‡¥æ‡¥Ø Instagram ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µç ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï."
        )
        bot.send_message(chat_id, error_msg, parse_mode="Markdown")
        return

    user_data[chat_id]["post"] = post_link  # Save post link

    msg = (
        "‚è≥ **Processing... Please wait.**"
        if lang == "en" else
        "‚è≥ **‡¥™‡µç‡¥∞‡µã‡¥∏‡¥∏‡µç‡¥∏‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ... ‡¥ï‡¥æ‡¥§‡µç‡¥§‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï.**"
    )
    bot.send_message(chat_id, msg, parse_mode="Markdown")

    boost_instagram(chat_id)

def boost_instagram(chat_id):
    lang = user_lang.get(chat_id, "en")
    user = user_data[chat_id]["username"]
    post = user_data[chat_id]["post"]
    ua = generate_user_agent()
    email = f"{random.randint(1000, 9999)}{int(time.time())}@gmail.com"

    headers = {'user-agent': ua}
    json_data = {'link': post, 'instagram_username': user, 'email': email}

    res = requests.post('https://api.likesjet.com/freeboost/7', headers=headers, json=json_data)
    api_response = res.json()

    if 'Success!' in api_response:
        response = (
            "‚úÖ **Boost successful!**"
            if lang == "en" else
            "‚úÖ **‡¥±‡µã‡¥∑‡µç ‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø!**"
        )
    elif "already used" in api_response.get("message", ""):
        response = (
            "‚ùå **You have reached the free boost limit. Try later.**"
            if lang == "en" else
            "‚ùå **‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥™‡¥∞‡¥Æ‡¥æ‡¥µ‡¥ß‡¥ø ‡¥â‡¥™‡¥Ø‡µã‡¥ó‡¥ø‡¥ö‡µç‡¥ö‡µÅ. ‡¥™‡¥ø‡¥®‡µç‡¥®‡µÄ‡¥ü‡µç ‡¥∂‡µç‡¥∞‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï.**"
        )
    else:
        response = f" **Log:** {api_response.get('message', 'Unknown error')}"

    bot.send_message(chat_id, response, parse_mode="Markdown")
    user_data.pop(chat_id, None)  # Clear user data

bot.polling()
