import telebot
import requests
import random
import os
import time
from user_agent import generate_user_agent
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = os.getenv("BOT_TOKEN")  # Use environment variable for security
bot = telebot.TeleBot(TOKEN)

# Dictionary to store user language preferences
user_lang = {}

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(
        InlineKeyboardButton("English üá¨üáß", callback_data="lang_en"),
        InlineKeyboardButton("Malayalam üáÆüá≥", callback_data="lang_ml")
    )
    bot.send_message(chat_id, "Please select your language:\n‡¥¶‡¥Ø‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥≠‡¥æ‡¥∑ ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("lang_"))
def set_language(call):
    chat_id = call.message.chat.id
    lang = call.data.split("_")[1]
    user_lang[chat_id] = lang  # Save user language preference

    if lang == "en":
        bot.send_message(chat_id, "‚úÖ Language set to English.\n\nSend your Instagram username and post URL in this format:\n\n`username`\n`post_link`", parse_mode="Markdown")
    else:
        bot.send_message(chat_id, "‚úÖ ‡¥≠‡¥æ‡¥∑ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç ‡¥Ü‡¥Ø‡¥ø ‡¥∏‡µÜ‡¥±‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ.\n\n‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥á‡µª‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡¥ó‡µç‡¥∞‡¥æ‡¥Ç ‡¥Ø‡µÇ‡¥∏‡µº‡¥®‡µÜ‡¥Ø‡¥ø‡¥Ç, ‡¥™‡µã‡¥∏‡µç‡¥±‡µç‡¥±‡µç URL ‡¥à ‡¥´‡µã‡µº‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥ø‡µΩ ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï:\n\n`username`\n`post_link`", parse_mode="Markdown")

@bot.message_handler(func=lambda message: "\n" in message.text)
def boost_instagram(message):
    chat_id = message.chat.id
    lang = user_lang.get(chat_id, "en")  # Default to English if no language is set

    try:
        data = message.text.split("\n")
        if len(data) < 2:
            bot.reply_to(message, "‚ùå Invalid format! Please send:\n\n`username`\n`post_link`", parse_mode="Markdown")
            return

        user, post = data[0].strip(), data[1].strip()
        ua = str(generate_user_agent())

        # Generate a new random email to avoid blocks
        email = f"{random.randint(1000, 9999)}{int(time.time())}@gmail.com"

        headers = {
            'authority': 'api.likesjet.com',
            'accept': 'application/json, text/plain, */*',
            'content-type': 'application/json',
            'origin': 'https://likesjet.com',
            'referer': 'https://likesjet.com/',
            'user-agent': ua
        }

        json_data = {
            'link': post,
            'instagram_username': user,
            'email': email,
        }

        res = requests.post('https://api.likesjet.com/freeboost/7', headers=headers, json=json_data)
        api_response = res.json()

        print("API Response:", api_response)  # Debugging

        if 'Success!' in api_response:
            response = "‚úÖ Boost successful!" if lang == "en" else "‚úÖ ‡¥±‡µã‡¥∑‡µç ‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø!"
        elif "You have already used our free boost service many times" in api_response.get("message", ""):
            response = "‚ùå You have reached the free boost limit. Try again later." if lang == "en" else "‚ùå ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥∏‡µó‡¥ú‡¥®‡µç‡¥Ø ‡¥¨‡µÇ‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥™‡¥∞‡¥ø‡¥ß‡¥ø ‡¥é‡¥§‡µç‡¥§‡¥ø‡¥ö‡µç‡¥ö‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥™‡¥ø‡¥®‡µç‡¥®‡µÄ‡¥ü‡µç ‡¥µ‡µÄ‡¥£‡µç‡¥ü‡µÅ‡¥Ç ‡¥∂‡µç‡¥∞‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï."
        else:
            response = f"‚ùå API Error: {api_response}"  # Show full error message

        bot.reply_to(message, response)

    except Exception as e:
        error_msg = f"Error: {str(e)}" if lang == "en" else f"‡¥™‡¥ø‡¥∂‡¥ï‡µç: {str(e)}"
        bot.reply_to(message, error_msg)

bot.polling()
